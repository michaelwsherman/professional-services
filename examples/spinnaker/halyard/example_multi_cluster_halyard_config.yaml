currentDeployment: default
deploymentConfigurations:
- name: default
  version: 1.5.1
  providers:
    dockerRegistry:
      enabled: true
      accounts:
      - name: my-gcr-account
        requiredGroupMembership: []
        address: https://gcr.io
        username: _json_key
        email: fake.email@spinnaker.io
        cacheIntervalSeconds: 30
        repositories: []
        passwordFile: '{path-to-password-file}'
      primaryAccount: my-gcr-account
    kubernetes:
      enabled: true
      accounts:
      - name: prod-project
        requiredGroupMembership: []
        dockerRegistries:
        - accountName: my-gcr-account
          namespaces: []
        context: gke_test-project_us-central1-a_web-app-cluster
        configureImagePullSecrets: true
        namespaces: []
        omitNamespaces: []
        kubeconfigFile: '{kube-config-path}'
      - name: stage-project
        requiredGroupMembership: []
        dockerRegistries:
        - accountName: my-gcr-account
          namespaces: []
        context: gke_test-project2_us-central1-a_web-app-cluster
        configureImagePullSecrets: true
        namespaces: []
        omitNamespaces: []
        kubeconfigFile: '{kube-config-path}'
      - name: my-k8s-account
        requiredGroupMembership: []
        dockerRegistries:
        - accountName: my-gcr-account
          namespaces: []
        context: gke_spinnaker-test_us-central1-a_spinnaker-cluster
        configureImagePullSecrets: true
        namespaces: []
        omitNamespaces: []
        kubeconfigFile: '{kube-config-path}'
      primaryAccount: prod-project
  deploymentEnvironment:
    size: SMALL
    type: Distributed
    accountName: my-k8s-account
    consul:
      enabled: false
    vault:
      enabled: false
    customSizing: {}
    gitConfig:
      upstreamUser: spinnaker
  persistentStorage:
    persistentStoreType: gcs
    gcs:
      jsonPath: '{json-path}'
      project: spinnaker-test
      bucket: spin-backup
      rootFolder: front50
  features:
    auth: false
    fiat: false
    chaos: false
    entityTags: false
    jobs: false
  metricStores:
    datadog:
      enabled: false
    prometheus:
      enabled: false
      add_source_metalabels: true
    stackdriver:
      enabled: false
    period: 30
    enabled: false
  notifications:
    slack:
      enabled: false
  timezone: America/Los_Angeles
  ci:
    jenkins:
      enabled: false
      masters: []
    travis:
      enabled: false
      masters: []
  security:
    apiSecurity:
      ssl:
        enabled: false
    uiSecurity:
      ssl:
        enabled: false
    authn:
      oauth2:
        enabled: false
        client: {}
        resource: {}
        userInfoMapping: {}
      saml:
        enabled: false
      ldap:
        enabled: false
      x509:
        enabled: false
      enabled: false
    authz:
      groupMembership:
        service: EXTERNAL
        google:
          roleProviderType: GOOGLE
        github:
          roleProviderType: GITHUB
        file:
          roleProviderType: FILE
      enabled: false
  artifacts:
    gcs:
      enabled: false
      accounts: []
  pubsub:
    google:
      enabled: false
      subscriptions: []
